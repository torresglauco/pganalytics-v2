#!/bin/bash

echo "üß™ TESTE R√ÅPIDO DE AUTENTICA√á√ÉO"
echo "=" * 40

echo "üîç 1. Verificando se API est√° rodando..."
if curl -s http://localhost:8080/health > /dev/null; then
    echo "  ‚úÖ API est√° rodando"
else
    echo "  ‚ùå API n√£o est√° rodando, iniciando..."
    nohup go run main.go > api.log 2>&1 &
    sleep 3
    echo "  üîÑ API iniciada"
fi

echo ""
echo "üîç 2. Verificando usu√°rios no banco..."
export PGPASSWORD="pganalytics123"
echo "  üìä Usu√°rios cadastrados:"
psql -h localhost -U pganalytics -d pganalytics -c "SELECT username, email, role, is_active FROM users;" 2>/dev/null || echo "  ‚ùå Erro ao consultar usu√°rios"

echo ""
echo "üß™ 3. Testando login com diferentes credenciais..."

echo "  üîç Teste 1: admin@pganalytics.local + admin123"
RESPONSE1=$(curl -s -X POST http://localhost:8080/auth/login   -H "Content-Type: application/json"   -d '{"username":"admin@pganalytics.local","password":"admin123"}')
echo "    üìä Resposta: $RESPONSE1"

echo ""
echo "  üîç Teste 2: admin@pganalytics.local + password"
RESPONSE2=$(curl -s -X POST http://localhost:8080/auth/login   -H "Content-Type: application/json"   -d '{"username":"admin@pganalytics.local","password":"password"}')
echo "    üìä Resposta: $RESPONSE2"

echo ""
echo "  üîç Teste 3: admin + admin123"
RESPONSE3=$(curl -s -X POST http://localhost:8080/auth/login   -H "Content-Type: application/json"   -d '{"username":"admin","password":"admin123"}')
echo "    üìä Resposta: $RESPONSE3"

echo ""
echo "üìã 4. An√°lise dos resultados:"
if echo "$RESPONSE1" | grep -q "token"; then
    echo "  ‚úÖ Login 1 funcionou!"
    TOKEN=$(echo "$RESPONSE1" | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
    echo "  üîë Token obtido, testando rota protegida..."
    
    PROTECTED=$(curl -s -X GET http://localhost:8080/metrics       -H "Authorization: Bearer $TOKEN")
    echo "  üìä Rota protegida: $PROTECTED"
    
elif echo "$RESPONSE2" | grep -q "token"; then
    echo "  ‚úÖ Login 2 funcionou!"
elif echo "$RESPONSE3" | grep -q "token"; then
    echo "  ‚úÖ Login 3 funcionou!"
else
    echo "  ‚ùå Nenhum login funcionou"
    echo "  üîç Verificando logs da API..."
    tail -10 api.log 2>/dev/null || echo "    ‚ùå Arquivo de log n√£o encontrado"
fi

echo ""
echo "‚úÖ Teste conclu√≠do!"
