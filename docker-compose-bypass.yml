version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: pganalytics-postgres
    environment:
      POSTGRES_DB: pganalytics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pganalytics
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Cliente C BYPASS (direto para Prometheus)
  c-bypass-collector:
    build: 
      context: ./monitoring/collector-c-otel
      dockerfile: Dockerfile.bypass
    container_name: pganalytics-c-bypass-collector
    environment:
      DATABASE_URL: "host=postgres port=5432 dbname=pganalytics user=postgres password=postgres"
    ports:
      - "8080:8080"  # Expor m√©tricas para Prometheus
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pganalytics
    restart: unless-stopped

  # Prometheus (coleta direto do Cliente C)
  prometheus:
    image: prom/prometheus:latest
    container_name: pganalytics-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus-bypass.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    networks:
      - pganalytics
    restart: unless-stopped

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: pganalytics-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - pganalytics
    restart: unless-stopped

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  pganalytics:
    driver: bridge
