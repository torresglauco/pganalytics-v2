version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: pganalytics-db
    environment:
      POSTGRES_DB: pganalytics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./monitoring/postgres-setup.sql:/docker-entrypoint-initdb.d/setup.sql
    networks:
      - pganalytics

  # OpenTelemetry Collector (NOVA VERS√ÉO)
  otel-collector:
    build: ./monitoring/otel-collector
    container_name: pganalytics-otel
    environment:
      DATABASE_URL: "postgres://postgres:postgres@postgres:5432/pganalytics?sslmode=disable"
      PORT: "9188"
    ports:
      - "9188:9188"
    depends_on:
      - postgres
    networks:
      - pganalytics
    restart: unless-stopped

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: pganalytics-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - pganalytics
    restart: unless-stopped

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: pganalytics-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - pganalytics
    restart: unless-stopped

  # Alertmanager
  alertmanager:
    image: prom/alertmanager:latest
    container_name: pganalytics-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
    networks:
      - pganalytics
    restart: unless-stopped

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  pganalytics:
    driver: bridge
