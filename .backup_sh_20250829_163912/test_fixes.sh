#!/bin/bash

echo "üß™ TESTANDO CORRE√á√ïES COMPLETAS"

# 1. Rebuild completo
echo "üîÑ Rebuild completo..."
docker-compose down
docker-compose build --no-cache
docker-compose up -d

# Aguardar inicializa√ß√£o
echo "‚è≥ Aguardando inicializa√ß√£o (20s)..."
sleep 20

# 2. Testar health
echo ""
echo "ü©∫ Testando health check..."
HEALTH=$(curl -s http://localhost:8080/health)
echo "üìä Resposta: $HEALTH"

# 3. Testar login com todos os usu√°rios
echo ""
echo "üîê Testando login com TODOS os usu√°rios..."

# Lista de usu√°rios para testar
USERS=("admin" "admin@docker.local" "admin@pganalytics.local" "user" "test")

for USERNAME in "${USERS[@]}"; do
    echo ""
    echo "üîç Testando: $USERNAME"
    
    LOGIN_RESPONSE=$(curl -s -X POST http://localhost:8080/auth/login \
        -H "Content-Type: application/json" \
        -d "{\"username\":\"$USERNAME\",\"password\":\"admin123\"}")
    
    if echo "$LOGIN_RESPONSE" | grep -q "token"; then
        echo "‚úÖ $USERNAME: LOGIN OK"
        
        # Extrair token
        TOKEN=$(echo "$LOGIN_RESPONSE" | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
        
        # Testar rota protegida
        METRICS_RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" http://localhost:8080/metrics)
        
        if echo "$METRICS_RESPONSE" | grep -q "success"; then
            echo "‚úÖ $USERNAME: METRICS OK"
        else
            echo "‚ùå $USERNAME: METRICS FALHOU"
            echo "üìä Resposta: $METRICS_RESPONSE"
        fi
    else
        echo "‚ùå $USERNAME: LOGIN FALHOU"
        echo "üìä Resposta: $LOGIN_RESPONSE"
    fi
done

# 4. Testar rotas API v1
echo ""
echo "üåê Testando rotas API v1..."

# Login para pegar token
LOGIN_RESPONSE=$(curl -s -X POST http://localhost:8080/auth/login \
    -H "Content-Type: application/json" \
    -d '{"username":"admin","password":"admin123"}')

if echo "$LOGIN_RESPONSE" | grep -q "token"; then
    TOKEN=$(echo "$LOGIN_RESPONSE" | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
    
    # Testar rotas v1
    API_ROUTES=("/api/v1/auth/profile" "/api/v1/analytics/queries/slow" "/api/v1/analytics/tables/stats" "/api/v1/analytics/connections" "/api/v1/analytics/performance")
    
    for ROUTE in "${API_ROUTES[@]}"; do
        echo "üîç Testando: $ROUTE"
        RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" "http://localhost:8080$ROUTE")
        
        if [ ${#RESPONSE} -gt 10 ]; then
            echo "‚úÖ $ROUTE: OK"
        else
            echo "‚ùå $ROUTE: FALHOU"
        fi
    done
fi

# 5. Testar seguran√ßa
echo ""
echo "üîí Testando seguran√ßa..."
UNAUTHORIZED=$(curl -s http://localhost:8080/metrics)
if echo "$UNAUTHORIZED" | grep -q "Authorization header required"; then
    echo "‚úÖ Seguran√ßa funcionando!"
else
    echo "‚ùå Problema de seguran√ßa!"
fi

# 6. Status final
echo ""
echo "üìä Status final dos containers..."
docker-compose ps

echo ""
echo "‚úÖ TESTE DE CORRE√á√ïES CONCLU√çDO!"
