#!/bin/bash

echo "üéØ TESTE FINAL PERFEITO"
echo "======================"

# Build e start
echo "üîÑ Build e start final..."
docker-compose build --no-cache
docker-compose up -d

echo "‚è≥ Aguardando (20s)..."
sleep 20

# Teste health primeiro
echo ""
echo "ü©∫ Health check..."
HEALTH=$(curl -s http://localhost:8080/health)
if echo "$HEALTH" | grep -q "healthy"; then
    echo "‚úÖ Health: OK"
else
    echo "‚ùå Health: FALHOU"
    echo "Response: $HEALTH"
fi

# Teste TODOS os usu√°rios
echo ""
echo "üîê TESTE DE USU√ÅRIOS:"
USERS=("admin" "admin@docker.local" "admin@pganalytics.local" "user" "test")
USER_SUCCESS=0

for USERNAME in "${USERS[@]}"; do
    echo ""
    echo "üîç Testando: $USERNAME"
    
    LOGIN_RESPONSE=$(curl -s -X POST http://localhost:8080/auth/login \
        -H "Content-Type: application/json" \
        -d "{\"username\":\"$USERNAME\",\"password\":\"admin123\"}")
    
    if echo "$LOGIN_RESPONSE" | grep -q "token"; then
        echo "‚úÖ LOGIN: OK"
        USER_SUCCESS=$((USER_SUCCESS + 1))
        
        # Extrair token para teste de m√©tricas
        TOKEN=$(echo "$LOGIN_RESPONSE" | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
        
        # Teste rota protegida
        METRICS_RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" http://localhost:8080/metrics)
        if echo "$METRICS_RESPONSE" | grep -q "success"; then
            echo "‚úÖ METRICS: OK"
        else
            echo "‚ùå METRICS: FALHOU"
        fi
    else
        echo "‚ùå LOGIN: FALHOU"
        echo "Response: $LOGIN_RESPONSE"
    fi
done

USER_RATE=$((USER_SUCCESS * 100 / 5))
echo ""
echo "üìä USU√ÅRIOS: $USER_SUCCESS/5 ($USER_RATE%)"

# Teste TODAS as rotas com admin
echo ""
echo "üåê TESTE DE ROTAS:"

LOGIN_RESPONSE=$(curl -s -X POST http://localhost:8080/auth/login \
    -H "Content-Type: application/json" \
    -d '{"username":"admin","password":"admin123"}')

if echo "$LOGIN_RESPONSE" | grep -q "token"; then
    TOKEN=$(echo "$LOGIN_RESPONSE" | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
    
    ROUTE_SUCCESS=0
    
    # Health (p√∫blico)
    echo "üîç /health"
    RESPONSE=$(curl -s http://localhost:8080/health)
    if echo "$RESPONSE" | grep -q "healthy"; then
        echo "‚úÖ OK"
        ROUTE_SUCCESS=$((ROUTE_SUCCESS + 1))
    else
        echo "‚ùå FALHOU"
    fi
    
    # Metrics (protegida)
    echo "üîç /metrics"
    RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" http://localhost:8080/metrics)
    if echo "$RESPONSE" | grep -q "success"; then
        echo "‚úÖ OK"
        ROUTE_SUCCESS=$((ROUTE_SUCCESS + 1))
    else
        echo "‚ùå FALHOU"
    fi
    
    # API v1 routes
    API_ROUTES=(
        "/api/v1/auth/profile"
        "/api/v1/analytics/queries/slow"
        "/api/v1/analytics/tables/stats"
        "/api/v1/analytics/connections"
        "/api/v1/analytics/performance"
    )
    
    for ROUTE in "${API_ROUTES[@]}"; do
        echo "üîç $ROUTE"
        RESPONSE=$(curl -s -H "Authorization: Bearer $TOKEN" "http://localhost:8080$ROUTE")
        if [ ${#RESPONSE} -gt 30 ]; then
            echo "‚úÖ OK"
            ROUTE_SUCCESS=$((ROUTE_SUCCESS + 1))
        else
            echo "‚ùå FALHOU (Response: $RESPONSE)"
        fi
    done
    
    ROUTE_RATE=$((ROUTE_SUCCESS * 100 / 7))
    echo ""
    echo "üìà ROTAS: $ROUTE_SUCCESS/7 ($ROUTE_RATE%)"
fi

# Teste de seguran√ßa
echo ""
echo "üîí TESTE DE SEGURAN√áA:"
UNAUTH=$(curl -s http://localhost:8080/metrics)
if echo "$UNAUTH" | grep -q "Authorization header required"; then
    echo "‚úÖ Seguran√ßa funcionando"
else
    echo "‚ùå Problema de seguran√ßa"
fi

# Resumo final
echo ""
echo "üéØ RESULTADO FINAL:"
echo "==================="
if [ $USER_RATE -eq 100 ] && [ $ROUTE_RATE -eq 100 ]; then
    echo "üéâ PERFEITO! 100% FUNCIONANDO!"
    echo "‚úÖ Usu√°rios: 5/5 (100%)"
    echo "‚úÖ Rotas: 7/7 (100%)"
    echo "‚úÖ Seguran√ßa: OK"
    echo ""
    echo "üöÄ INTEGRA√á√ÉO JWT + ESTRUTURA MODULAR: COMPLETA!"
else
    echo "‚ö†Ô∏è Funcional mas n√£o perfeito:"
    echo "üìä Usu√°rios: $USER_SUCCESS/5 ($USER_RATE%)"
    echo "üìà Rotas: $ROUTE_SUCCESS/7 ($ROUTE_RATE%)"
fi

echo ""
echo "üåê SISTEMA FINAL:"
echo "  Health: http://localhost:8080/health"
echo "  Login: POST http://localhost:8080/auth/login"
echo "  Metrics: GET http://localhost:8080/metrics (Auth)"
echo "  API v1: http://localhost:8080/api/v1/* (Auth)"
