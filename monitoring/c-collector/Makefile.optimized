CC = gcc
CFLAGS = -Wall -Wextra -std=c99
OPTIMIZED_CFLAGS = -O3 -march=native -flto -DNDEBUG
DEBUG_CFLAGS = -g -O0 -DDEBUG
LIBS = -lpq -lmicrohttpd -lpthread

SRCDIR = .
SOURCES = $(wildcard $(SRCDIR)/*.c)
OBJECTS = $(SOURCES:.c=.o)
TARGET = pganalytics-collector

.PHONY: all optimized debug clean install

# Default target
all: $(TARGET)

# Optimized build for production
optimized: CFLAGS += $(OPTIMIZED_CFLAGS)
optimized: $(TARGET)

# Debug build for development
debug: CFLAGS += $(DEBUG_CFLAGS)
debug: $(TARGET)

$(TARGET): $(OBJECTS)
	$(CC) $(CFLAGS) -o $@ $^ $(LIBS)

%.o: %.c
	$(CC) $(CFLAGS) -c -o $@ $<

clean:
	rm -f $(OBJECTS) $(TARGET)

install: $(TARGET)
	install -m 755 $(TARGET) /usr/local/bin/

# Performance profiling
profile: CFLAGS += -pg
profile: $(TARGET)

# Static analysis
analyze:
	cppcheck --enable=all --std=c99 $(SOURCES)

# Memory check (requires valgrind)
memcheck: debug
	valgrind --leak-check=full --show-leak-kinds=all ./$(TARGET)
