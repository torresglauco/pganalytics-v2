package main

import (
	"log"

	"pganalytics-backend/internal/api/routes"
	"pganalytics-backend/internal/config"
	"pganalytics-backend/internal/repository/postgres"
	"pganalytics-backend/internal/services"

	"github.com/gin-gonic/gin"
)

func main() {
	// Load configuration
	cfg := config.Load()

	// Connect to database
	db, err := postgres.Connect(cfg.DatabaseURL())
	if err != nil {
		log.Fatal("Failed to connect to database:", err)
	}
	defer db.Close()

	// Initialize services
	authService := services.NewAuthService(cfg.JWTSecret)
	analyticsService := services.NewAnalyticsService(db)

	// Setup Gin
	if cfg.Environment == "production" {
		gin.SetMode(gin.ReleaseMode)
	}

	router := gin.Default()

	// Setup routes
	routes.SetupRoutes(router, authService, analyticsService)

	// Start server
	log.Printf("Server starting on port %s", cfg.Port)
	if err := router.Run(":" + cfg.Port); err != nil {
		log.Fatal("Failed to start server:", err)
	}
}
