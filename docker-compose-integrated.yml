version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: pganalytics-postgres
    environment:
      POSTGRES_DB: pganalytics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pganalytics
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # OpenTelemetry Collector (Official)
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: pganalytics-otel-collector
    command: ["--config=/etc/otel-collector.yaml"]
    volumes:
      - ./monitoring/otel-collector-service/otel-collector.yaml:/etc/otel-collector.yaml:ro
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
      - "8889:8889"   # Prometheus metrics
      - "8888:8888"   # Internal metrics
    networks:
      - pganalytics
    restart: unless-stopped

  # Cliente C com OpenTelemetry SDK
  c-otel-collector:
    build: ./monitoring/collector-c-otel
    container_name: pganalytics-c-otel-collector
    environment:
      DATABASE_URL: "host=postgres port=5432 dbname=pganalytics user=postgres password=postgres"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4318/v1/metrics"
      OTEL_SERVICE_NAME: "pganalytics-c-collector"
      OTEL_SERVICE_VERSION: "1.0.0"
    depends_on:
      postgres:
        condition: service_healthy
      otel-collector:
        condition: service_started
    networks:
      - pganalytics
    restart: unless-stopped

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: pganalytics-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--enable-feature=otlp-write-receiver'
    networks:
      - pganalytics
    restart: unless-stopped

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: pganalytics-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - pganalytics
    restart: unless-stopped

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  pganalytics:
    driver: bridge
