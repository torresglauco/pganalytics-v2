version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: pganalytics
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    volumes:
      - ./monitoring/sql/init-extensions.sql:/docker-entrypoint-initdb.d/01-init-extensions.sql:ro
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c pg_stat_statements.max=10000
    ports:
      - "5432:5432"
    networks:
      - pganalytics_network

  c-bypass-collector:
    build:
      context: .
      dockerfile: Dockerfile.c-collector-enhanced
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=pganalytics
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - pganalytics_network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.enhanced.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - pganalytics_network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    networks:
      - pganalytics_network

networks:
  pganalytics_network:
    driver: bridge
